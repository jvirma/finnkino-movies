{"version":3,"sources":["api/index.js","components/AreaPicker/AreaPicker.jsx","components/DatePicker/DatePicker.jsx","components/Cards/Cards.jsx","App.js","index.js","components/Cards/Cards.module.css","components/AreaPicker/AreaPicker.module.css","components/DatePicker/DatePicker.module.css","App.module.css","utils.js"],"names":["xml2js","require","url","fetchAreas","a","axios","get","xml","parser","Parser","modifiedData","parseStringPromise","data","then","result","TheatreAreas","TheatreArea","shift","catch","err","fetchDates","areaID","Dates","dateTime","fetchSchedules","selectedDate","Schedule","Shows","Show","fetchSynopsis","console","log","Events","Event","AreaPicker","handleAreaChange","useState","fetchedAreas","setFetchedAreas","useEffect","fetchAPI","FormControl","className","styles","formControl","NativeSelect","defaultValue","classes","root","formPadding","onChange","e","target","value","map","area","key","ID","Name","formatDate","DatePicker","dates","handleDateChange","date","i","Cards","schedules","synopsis","length","find","x","container","schedule","Grid","item","mb","component","Card","xs","card","Images","EventLargeImageLandscape","CardMedia","media","image","toString","CardContent","Typography","style","marginBottom","variant","Title","ProductionYear","filter","obj","EventID","ShortSynopsis","LengthInMinutes","PresentationMethodAndLanguage","TheatreAndAuditorium","Date","dttmShowStart","toLocaleTimeString","hour","minute","Button","mt","href","ShowURL","App","state","newareaID","setState","fetchedDates","newDate","this","fetchedSchedules","fetchedSynopsis","spacing","justify","padding","React","Component","ReactDOM","render","document","getElementById","module","exports","d","month","getMonth","day","getDate","year","getFullYear","join"],"mappings":"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","file":"static/js/main.4872f572.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst xml2js = require('xml2js');\r\n\r\nconst url = 'https://www.finnkino.fi/xml'\r\n\r\nexport const fetchAreas = async() => {\r\n  try {\r\n    const xml = await axios.get(`${url}/TheatreAreas`);\r\n    const parser = new xml2js.Parser();\r\n\r\n    const modifiedData = parser.parseStringPromise(xml.data).then(function (result) {\r\n      result.TheatreAreas.TheatreArea.shift();\r\n      return result.TheatreAreas.TheatreArea;\r\n    })\r\n    .catch(function (err) {\r\n    });\r\n    return modifiedData;\r\n    \r\n  } catch (error) {\r\n  }\r\n}\r\n\r\nexport const fetchDates = async(areaID) => {\r\n  try {\r\n    const xml = await axios.get(`${url}/ScheduleDates/?area=${areaID}`);\r\n    const parser = new xml2js.Parser();\r\n    const modifiedData = parser.parseStringPromise(xml.data).then(function (result) {\r\n      return result.Dates.dateTime;\r\n    })\r\n    .catch(function (err) {\r\n    });\r\n    return modifiedData;\r\n    \r\n  } catch (error) {\r\n  }\r\n}\r\n\r\nexport const fetchSchedules = async(areaID, selectedDate) => {\r\n  try {\r\n    const xml = await axios.get(`${url}/Schedule/?area=${areaID}&dt=${selectedDate}`);\r\n    const parser = new xml2js.Parser();\r\n    const modifiedData = parser.parseStringPromise(xml.data).then(function (result) {\r\n      return result.Schedule.Shows[0].Show;\r\n    })\r\n    .catch(function (err) {\r\n    });\r\n    return modifiedData;\r\n    \r\n  } catch (error) {\r\n  }\r\n}\r\n\r\nexport const fetchSynopsis = async() => {\r\n  try {\r\n    const xml = await axios.get(`${url}/Events/`);\r\n    const parser = new xml2js.Parser();\r\n    const modifiedData = parser.parseStringPromise(xml.data).then(function (result) {\r\n      console.log(result.Events.Event);\r\n      \r\n      return result.Events.Event;\r\n    })\r\n    .catch(function (err) {\r\n    });\r\n    return modifiedData;\r\n  } catch (error) {\r\n  }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './AreaPicker.module.css';\r\nimport { fetchAreas } from '../../api';\r\n\r\nconst AreaPicker = ({ handleAreaChange }) => {\r\n  const [fetchedAreas, setFetchedAreas] = useState([]);\r\n  useEffect(()=> {\r\n    const fetchAPI = async () => {\r\n      setFetchedAreas(await fetchAreas());\r\n    }\r\n    fetchAPI();\r\n  }, [setFetchedAreas])\r\n  \r\n  return (\r\n      <FormControl className={styles.formControl}>\r\n        <NativeSelect defaultValue=\"\" classes={{root: styles.formPadding}} onChange={(e) => handleAreaChange(e.target.value)}>\r\n            {fetchedAreas.map((area) => <option key={area.ID} value={area.ID}> {area.Name}</option>)}\r\n        </NativeSelect>\r\n      </FormControl>\r\n  )\r\n}\r\n\r\nexport default AreaPicker;","import React from 'react';\r\nimport { NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './DatePicker.module.css';\r\n\r\nvar formatDate = require('../../utils.js').formatDate;\r\n\r\nconst DatePicker = ({ dates, handleDateChange }) => {\r\n  return (\r\n      <FormControl className={styles.formControl}>\r\n        <NativeSelect defaultValue=\"\" classes={{root: styles.formPadding}} onChange={(e) => handleDateChange(e.target.value)}>\r\n            {dates ? dates.map((date, i) => <option key={i} value={formatDate(date)}> {formatDate(date)}</option>) : \"\"}\r\n        </NativeSelect>\r\n      </FormControl>\r\n  )\r\n}\r\n\r\nexport default DatePicker;","import React, { useState, useEffect }  from 'react';\r\nimport {Card, CardContent, Typography, Grid, CardMedia, Button} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport { fetchSynopsis } from '../../api';\r\n\r\nconst Cards = ( { schedules, synopsis }) => {\r\n\r\n  /*const [synopsis, setSynopsis] = useState([]);\r\n\r\n  useEffect(() => {\r\n      const fetchAPI = async () => {\r\n          setSynopsis(await fetchSynopsis());\r\n      }\r\n      fetchAPI();\r\n\r\n  }, [])\r\n  console.log(synopsis);*/\r\n\r\n\r\n  \r\n\r\n  console.log(synopsis)\r\n  if (synopsis.length > 0) {\r\n    console.log((synopsis.find( x => x.ID == \"303511\").ID))\r\n  }\r\n  \r\n\r\n  return (\r\n    \r\n    <div className={styles.container}>\r\n      \r\n      {synopsis.length > 0 ? schedules.map((schedule, i) => \r\n\r\n          <Grid item mb={2} component={Card} xs={12} className={styles.card} key={i}>\r\n              {schedule.Images[0].EventLargeImageLandscape ?\r\n              <CardMedia\r\n                className={styles.media}\r\n                image={schedule.Images[0].EventLargeImageLandscape.toString()}\r\n              />\r\n              : \"\"}\r\n            <CardContent>\r\n              \r\n              <Typography style={{ marginBottom: 15 }} variant=\"h5\">{schedule.Title} ({schedule.ProductionYear}) </Typography>\r\n              <Typography style={{ marginBottom: 15 }}>{(synopsis.filter(obj => { return obj.ID.toString() === schedule.EventID.toString()}))[0].ShortSynopsis}</Typography>\r\n              <Typography>{schedule.LengthInMinutes} min, {schedule.PresentationMethodAndLanguage}</Typography>\r\n              <Typography>{schedule.TheatreAndAuditorium}</Typography>\r\n              <Typography style={{ marginBottom: 15 }}>Alkaa klo {(new Date(schedule.dttmShowStart)).toLocaleTimeString('fi-FI', {hour: '2-digit', minute:'2-digit'})}</Typography>\r\n              <Button mt={4} variant=\"contained\" href={schedule.ShowURL.toString()} target=\"_blank\" >Osta liput</Button>\r\n\r\n            </CardContent>\r\n          </Grid>\r\n      \r\n      ) : \"\"}\r\n    \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\nimport { AreaPicker, DatePicker, Cards } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchDates, fetchSchedules, fetchSynopsis } from './api';\r\nimport { Grid, CardContent, Typography, Card } from '@material-ui/core';\r\nvar formatDate = require('./utils.js').formatDate;\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    areaID: '1029',\r\n    dates: [],\r\n    selectedDate: '',\r\n    schedules: [],\r\n    synopsis: [],\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { areaID } = this.state;\r\n    const fetchedDates = await fetchDates(areaID);\r\n    this.setState({ dates: fetchedDates })\r\n    this.setState({ selectedDate: formatDate(fetchedDates[0]) })\r\n    const fetchedSchedules = await fetchSchedules(areaID, formatDate(fetchedDates[0]));\r\n    this.setState({ schedules: fetchedSchedules });\r\n    const fetchedSynopsis = await fetchSynopsis();\r\n    this.setState({ synopsis: fetchedSynopsis });\r\n  }\r\n\r\n  handleAreaChange = async (newareaID) => {\r\n    this.setState({ areaID: newareaID })\r\n    const fetchedDates = await fetchDates(newareaID);\r\n    this.setState({ dates: fetchedDates })\r\n\r\n    if (fetchedDates) {\r\n\r\n      this.setState({ selectedDate: formatDate(fetchedDates[0]) })\r\n      const schedules = await fetchSchedules(newareaID, formatDate(fetchedDates[0]));\r\n      this.setState({ schedules: schedules });\r\n      console.log(this.state);\r\n    }\r\n    else {\r\n      this.setState({ selectedDate: '' })\r\n      this.setState({ schedules: [] });\r\n    }\r\n\r\n  }\r\n  handleDateChange = async (newDate) => {\r\n    this.setState({ selectedDate: newDate })\r\n    const { areaID } = this.state;\r\n    const schedules = await fetchSchedules(areaID, newDate);\r\n    this.setState({ schedules: schedules });\r\n  }\r\n\r\n  render() {\r\n    const { dates, schedules, synopsis } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <Grid container spacing={3} justify=\"center\">\r\n          <Grid item xs={12}>\r\n            <Grid item component={Card} xs={12}>\r\n              <CardContent>\r\n                <Typography variant=\"h2\" className={styles.padding} >Finnkinon ohjelmisto</Typography>\r\n              </CardContent>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <AreaPicker handleAreaChange={this.handleAreaChange} />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <DatePicker dates={dates} handleDateChange={this.handleDateChange} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Cards schedules={schedules} synopsis={synopsis} />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Cards_card__3GsQS\",\"media\":\"Cards_media__3oRnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"AreaPicker_formControl__32rBx\",\"formPadding\":\"AreaPicker_formPadding__1nPwO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"DatePicker_formControl__1olos\",\"formPadding\":\"DatePicker_formPadding__2m8BI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__13J7G\",\"padding\":\"App_padding__1b_fu\"};","var formatDate = function(date) {\r\n  var d = new Date(date),\r\n      month = '' + (d.getMonth() + 1),\r\n      day = '' + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = '0' + month;\r\n  if (day.length < 2) day = '0' + day;\r\n\r\n  return [day, month, year].join('.');\r\n}\r\nexports.formatDate = formatDate;"],"sourceRoot":""}